#+TITLE: Manage Iframes
#+AUTHOR: VLEAD
#+DATE: <2017-04-06 Thu>
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ../org-templates/level-1.org
#+options: ^:nil
#+LATEX: Literal LaTeX code for export

* Introduction
  This has the functionality to manage iframes which
  includes creation, insertion, deletion, setting content to
  an iframe,..etc.  In this application, the index page is
  divided into 


* Manage Iframes
** Create a frame
   This function creates and returns an iframe with given
   attributes. The attributes are name, id, width and height
   of the frame.
#+NAME: create-new-iframe
#+BEGIN_SRC javascript 
var createNewIframe = function(name, id, width, height) {
  var newIframe = document.createElement("iframe");
  newIframe.setAttribute("width", width);
  newIframe.setAttribute("height", height);
  newIframe.setAttribute("frameBorder", "0");
  newIframe.name = name;
  newIframe.id = id;
  return newIframe;
};

#+END_SRC

** Insert a Frame in a Division
   Given a division, and an iframe, the iframe is inserted
   in the division.
#+NAME: insert-frame-in-division
#+BEGIN_SRC javascript 
var insertFrameInDivision = function(iframe, divId) {
  var divElem = parent.document.getElementById(divId);
  divElem.appendChild(iframe);
};

#+END_SRC

** Delete Frame from a Division
   Given a frame and a division, an iframe within the
   division is deleted.
#+NAME: delete-frame-in-division
#+BEGIN_SRC javascript 
var deleteFrameInDivision = function(frameId, divId) {
  if (parent.document.getElementById(divId).hasChildNodes()) {
    var frameElem = parent.document.getElementById(frameId);
    if (frameElem !== null) {
      frameElem.parentNode.removeChild(frameElem);
    }
  }
};

#+END_SRC

** Create and insert content iframe 
   This function creates a =contentIframe= and inserts it
   into =contentDiv=
#+NAME: insert-content-iframe
#+BEGIN_SRC javascript 
var insertContentIframe = function() {
  var newFrame = createContentIframe();
  var division = document.getElementById("contentDiv");
  insertFrameInDivision(newFrame, division.id);
};

#+END_SRC

** Create and insert footer iframe
   This function creates a =footerIframe= and inserts it
   into =footerDiv=

#+NAME: insert-footer-iframe
#+BEGIN_SRC javascript 
var insertFooterIframe = function() {
  var newFrame = createFooterIframe();
  var division = document.getElementById("footerDiv");
  insertFrameInDivision(newFrame, division.id);
};

#+END_SRC

** Set content in footer iframe
   Once the footer iframe is created to display the footer
   we give =http://footer.vlabs.ac.in/footer= as source of
   the iframe. The content of the footer will be dynamically
   served from the footer service.
#+NAME: set-footer-content-in-iframe
#+BEGIN_SRC javascript
var setFooterUrlToFooterIframe = function() {
  var iframe = document.getElementById("footerIframe");
  iframe.src = footerUrl;
};

#+END_SRC

** Set the source and content to an frame
#+NAME: set-source-and-content-to-content-iframe
#+BEGIN_SRC js
var setContent = function(content, htmlFile) {
  setSourceToContentIframe(htmlFile);
  setTimeout(setContentToContentIframe, 100, content);
};

#+END_SRC

** Set Source To Content Iframe
   The frame source is set to the corresponding html that is
   passed as an argument.
#+NAME: set-source-to-content-iframe
#+BEGIN_SRC js
var setSourceToContentIframe = function(htmlFile) {
  var cIframe = document.getElementById("contentIframe");
  cIframe.src = htmlFile;
};

#+END_SRC

** Set Content to Content Iframe
   The content is set to the =contentDiv= that is common in
   all the different html files (lab, discipline and
   institute).  At given time, one of these html files is
   the source of the content iframe.
#+NAME: set-content-to-content-iframe
#+BEGIN_SRC javascript 
var setContentToContentIframe = function(content) {
  var cIframe = document.getElementById("contentIframe");
  var contentDoc = cIframe.contentDocument;
  var elem = contentDoc.getElementById("contentDiv");
  elem.innerHTML = content;
};

#+END_SRC

** Set usage in Iframe
   This function displays the usage data in the
   =contentIframe=.
#+NAME: set-usage-in-iframe
#+BEGIN_SRC javascript 
var setUsageInContentIframe = function() {
  var iframe = parent.document.getElementById("contentIframe");
  iframe.src = "https://info.vlabs.ac.in/analytics/analytics/usage.html";
};

#+END_SRC

** Create Content Iframe
#+name: create-content-iframe
#+BEGIN_SRC js
var createContentIframe = function() {
  return createNewIframe("contentIframe", "contentIframe", "100%", "9500em");
};

#+END_SRC
** Create Footer Iframe
#+name: create-footer-iframe
#+BEGIN_SRC js
var createFooterIframe = function() {
  return createNewIframe("footerIframe", "footerIframe", "100%", "390em");
};

#+END_SRC

** Set Url to a Sandboxed content iframe
   The lab should run from a sandboxed iframe since the Open
   edX labs expand out when loaded into a frame.  To ensure
   such urls stay within the iframe, the property sandbox
   should be set. 
#+name: set-url-to-sandboxed-content-iframe
#+BEGIN_SRC js
var setUrlToSandBoxedContentIframe = function(url) {
  var iframe = document.getElementById("contentIframe");                                       
  iframe.sandbox = 'allow-scripts allow-same-origin allow-popups allow-forms';
  iframe.src = url;
};

#+END_SRC
* Tangle 
** sources
#+BEGIN_SRC javascript :tangle js/manage-iframes.js :eval no :noweb yes 
<<create-new-iframe>>
<<create-content-iframe>>
<<create-footer-iframe>>
<<insert-frame-in-division>>
<<delete-frame-in-division>>
<<insert-content-iframe>>
<<insert-footer-iframe>>
<<set-footer-content-in-iframe>>
<<set-source-to-content-iframe>>
<<set-content-to-content-iframe>>
<<set-source-and-content-to-content-iframe>>
<<set-usage-in-iframe>>
<<set-url-to-sandboxed-content-iframe>>
#+END_SRC
